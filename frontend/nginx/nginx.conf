# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name yourdomain.com localhost;

    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS server configuration
server {
    listen 443 ssl;
    server_name yourdomain.com localhost;

    # SSL configuration
    ssl_certificate /etc/nginx/certs/nginx.crt; # Path to your SSL certificate
    ssl_certificate_key /etc/nginx/certs/nginx.key; # Path to your SSL certificate key

    ssl_protocols TLSv1.2 TLSv1.3; # Specify allowed TLS protocols
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-CHACHA20-POLY1305'; # Strong cipher suite for SSL
    ssl_prefer_server_ciphers on; # Prefer server ciphers

    # Optimize SSL
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Diffie-Hellman parameter for DHE ciphersuites
    # Generate it using: openssl dhparam -out /etc/nginx/certs/dhparam.pem 2048
    ssl_dhparam /etc/nginx/certs/dhparam.pem;

    # Enable HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # SSL stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s; # Replace with your DNS servers
    resolver_timeout 5s;

    # Root directory and index file
    root /usr/share/nginx/html;
    index index.html;

    # Serve static files directly
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Reverse proxy for backend API
    location /api/ {
        proxy_pass http://backend:3001; # Proxy pass to the backend service
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_cache_bypass $http_upgrade;
    }
}